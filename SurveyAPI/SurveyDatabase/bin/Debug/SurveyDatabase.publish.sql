/*
Deployment script for SurveyDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SurveyDatabase"
:setvar DefaultFilePrefix "SurveyDatabase"
:setvar DefaultDataPath "C:\Users\Swathi Arun\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Swathi Arun\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[tblAnswers]...';


GO
CREATE TABLE [dbo].[tblAnswers] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [SurveyId]   INT            NOT NULL,
    [QuestionId] INT            NOT NULL,
    [OptionId]   INT            NULL,
    [AnswerText] NVARCHAR (MAX) NULL,
    [PersonId]   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblOptions]...';


GO
CREATE TABLE [dbo].[tblOptions] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [QuestionId] INT            NOT NULL,
    [OptionText] NVARCHAR (500) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblPerson]...';


GO
CREATE TABLE [dbo].[tblPerson] (
    [Id]      INT            IDENTITY (1, 1) NOT NULL,
    [Name]    NVARCHAR (200) NOT NULL,
    [EmailId] NVARCHAR (300) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblQuestions]...';


GO
CREATE TABLE [dbo].[tblQuestions] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Question]     NVARCHAR (MAX) NULL,
    [QuestionType] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblQuestionType]...';


GO
CREATE TABLE [dbo].[tblQuestionType] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [QuestionType] NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblSurvey]...';


GO
CREATE TABLE [dbo].[tblSurvey] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Title]       NVARCHAR (200) NOT NULL,
    [Description] NVARCHAR (MAX) NULL,
    [StartDate]   DATETIME       NULL,
    [EndDate]     DATETIME       NULL,
    [IsOpen]      BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[tblSurveyQuestionMapping]...';


GO
CREATE TABLE [dbo].[tblSurveyQuestionMapping] (
    [SurveyId]       INT NOT NULL,
    [QuestionId]     INT NOT NULL,
    [QuestionNumber] INT NOT NULL,
    CONSTRAINT [PK_tblSurveyQuestionMapping] PRIMARY KEY CLUSTERED ([QuestionId] ASC, [SurveyId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblAnswers]...';


GO
ALTER TABLE [dbo].[tblAnswers]
    ADD FOREIGN KEY ([SurveyId]) REFERENCES [dbo].[tblSurvey] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblAnswers]...';


GO
ALTER TABLE [dbo].[tblAnswers]
    ADD FOREIGN KEY ([QuestionId]) REFERENCES [dbo].[tblQuestions] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblAnswers]...';


GO
ALTER TABLE [dbo].[tblAnswers]
    ADD FOREIGN KEY ([OptionId]) REFERENCES [dbo].[tblOptions] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblAnswers]...';


GO
ALTER TABLE [dbo].[tblAnswers]
    ADD FOREIGN KEY ([PersonId]) REFERENCES [dbo].[tblPerson] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblOptions]...';


GO
ALTER TABLE [dbo].[tblOptions]
    ADD FOREIGN KEY ([QuestionId]) REFERENCES [dbo].[tblQuestions] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[tblQuestions]...';


GO
ALTER TABLE [dbo].[tblQuestions]
    ADD FOREIGN KEY ([QuestionType]) REFERENCES [dbo].[tblQuestionType] ([Id]);


GO
PRINT N'Creating [dbo].[uspCloseSurvey]...';


GO
CREATE PROCEDURE [dbo].[uspCloseSurvey]
	@Id int
AS
	DECLARE @Count INT = 0
	SELECT @Count = COUNT(*) FROM tblSurvey WHERE Id = @Id
IF @Count > 0
	BEGIN
		UPDATE tblSurvey SET IsOpen = 0 WHERE Id = @Id
		RETURN 1
	END
ELSE	
RETURN 0
GO
PRINT N'Creating [dbo].[uspCreateSurvey]...';


GO
CREATE PROCEDURE [dbo].[uspCreateSurvey]
	@Title nvarchar(200),
	@Description nvarchar(MAX),
	@StartDate datetime,
	@EndDate datetime,
	@IsOpen bit
AS

DECLARE @Count INT = 0
SELECT @Count = COUNT(*) FROM tblSurvey WHERE Title = @Title
IF @Count = 0
BEGIN
	INSERT INTO tblSurvey(Title,Description,StartDate,EndDate,IsOpen) VALUES (@Title,@Description,@StartDate,@EndDate,@IsOpen)
	RETURN 1
END
ELSE	 
RETURN 0
GO
PRINT N'Creating [dbo].[uspDeleteSurvey]...';


GO
CREATE PROCEDURE [dbo].[uspDeleteSurvey]
	@Id int
AS
		DECLARE @Count INT = 0
	SELECT @Count = COUNT(*) FROM tblSurvey WHERE Id = @Id
IF @Count > 0
	BEGIN
		DELETE tblSurvey WHERE Id = @Id
		RETURN 1
	END
ELSE	
RETURN 0
GO
PRINT N'Creating [dbo].[uspUpdateSurvey]...';


GO
CREATE PROCEDURE [dbo].[uspUpdateSurvey]
	@Id int,
	@Title nvarchar(200),
	@Description nvarchar(MAX),
	@StartDate datetime,
	@EndDate datetime,
	@IsOpen bit
AS
	DECLARE @Count INT = 0
SELECT @Count = COUNT(*) FROM tblSurvey WHERE Id = @Id
IF @Count > 0
BEGIN
	UPDATE tblSurvey SET Title=@Title, Description=@Description, StartDate=@StartDate, EndDate=@EndDate, IsOpen=@IsOpen
	WHERE Id = @Id
	RETURN 1
END
ELSE	 
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8ac76789-4ea5-4636-ac96-760dacfd0779')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8ac76789-4ea5-4636-ac96-760dacfd0779')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
